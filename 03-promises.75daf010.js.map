{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SACrCC,EAAoBF,SAASC,cAAc,kBAC3CE,EAAmBH,SAASC,cAAc,iBAC1CG,EAAqBJ,SAASC,cAAc,mBAelDF,EAAYM,iBAAiB,UAAUC,IACrCA,EAAMC,iBACN,IAAIC,EAAU,EACVC,EAAOC,OAAOP,EAAiBQ,OAASD,OAAOR,EAAkBS,OAErEC,YAAW,KACT,MAAMC,EAAUC,aAAY,KAC1BN,GAAW,EApBjB,SAAuBO,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiBI,IACjBA,EAAQ,C,SAAEN,E,MAAUC,GAAQ,EAGX,CAACK,EAASC,KAC3BA,EAAO,C,SAAEP,E,MAAUC,GAAQ,E,CAa3BO,CAAcf,EAASC,GACpBe,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBZ,QAAiBC,MAAU,IAGnDY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBS,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBd,QAAeC,MAAU,IAInDP,GAAQC,OAAOP,EAAiBQ,OAE5BH,IAAYE,OAAON,EAAmBO,QACxCmB,cAAcjB,EAAQ,GAEvBV,EAAiBQ,MAAM,GACzBT,EAAkBS,MAAQR,EAAiBQ,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElement = document.querySelector('.form');\nconst delayInputElement = document.querySelector('[name=\"delay\"]');\nconst stepInputElement = document.querySelector('[name=\"step\"]');\nconst amountInputElement = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      resolve({ position, delay });\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      reject({ position, delay });\n    });\n  }\n}\n\nformElement.addEventListener('submit', event => {\n  event.preventDefault();\n  let counter = 0;\n  let step = Number(stepInputElement.value) + Number(delayInputElement.value);\n\n  setTimeout(() => {\n    const timerID = setInterval(() => {\n      counter += 1;\n      createPromise(counter, step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n\n      step += Number(stepInputElement.value);\n\n      if (counter === Number(amountInputElement.value)) {\n        clearInterval(timerID);\n      }\n    }, stepInputElement.value);\n  }, delayInputElement.value - stepInputElement.value);\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formElement","document","querySelector","$47d4ff9957288465$var$delayInputElement","$47d4ff9957288465$var$stepInputElement","$47d4ff9957288465$var$amountInputElement","addEventListener","event","preventDefault","counter","step","Number","value","setTimeout","timerID","setInterval","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.75daf010.js.map"}